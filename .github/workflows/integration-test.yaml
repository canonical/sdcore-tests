name: Integration test

on:
  workflow_call:

permissions:
  id-token: write
  contents: read

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "${{ secrets.ROLE_TO_ASSUME }}"
          aws-region: "${{ secrets.AWS_REGION }}"
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: "${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}"
          ec2-image-id: "${{ secrets.IMAGE_ID }}"
          ec2-instance-type: "${{ secrets.INSTANCE_TYPE }}"
          subnet-id: "${{ secrets.AWS_SUBNET_ID }}"
          security-group-id: "${{ secrets.AWS_SECURITY_GROUP_ID }}"
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "sd-core-tests-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]
          block-device-mappings: >
            [ 
              {
                "DeviceName": "/dev/sda1", 
                "Ebs": { 
                  "DeleteOnTermination": true, 
                  "VolumeSize": 50, 
                  "VolumeType": "gp2"
                } 
              } 
            ]

  integration-tests:
    name: Integration tests
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup LXD
        run: |
          sudo snap refresh lxd --channel=5.13/stable
          echo "# Initialize LXD"
          lxd init --auto
          
          echo "# Configure LXD"
          lxc --project charmcraft project create local:charmcraft || true
          lxc --project charmcraft profile device add default root disk path=/ pool=default type=disk || true
          lxc --project charmcraft profile device add default eth0 nic name=eth0 network=lxdbr0 || true
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          juju-channel: 3.1/stable
          provider: microk8s
          channel: 1.27-strict/stable
          microk8s-addons: "hostpath-storage dns metallb:10.1.1.1-10.1.1.254"
      - name: Enable Multus addon
        continue-on-error: true
        run: |
          sudo microk8s addons repo add community https://github.com/canonical/microk8s-community-addons --reference feat/strict-fix-multus
          sudo microk8s enable multus
          sudo microk8s kubectl -n kube-system rollout status daemonset/kube-multus-ds
          sudo microk8s kubectl auth can-i create network-attachment-definitions
#      - name: Setup upterm session
#        uses: lhotari/action-upterm@v1
      - name: Run integration tests
        run: tox -vve integration
      - name: Archive juju crashdump
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: juju-crashdump
          path: juju-crashdump-*.tar.xz

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner
      - integration-tests
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "${{ secrets.ROLE_TO_ASSUME }}"
          aws-region: "${{ secrets.AWS_REGION }}"
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: "${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}"
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
